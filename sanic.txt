----this was a edit. credit to WafflesAreVeryGood!
--https://github.com/Mokiros/roblox-FE-compatibility
if game:GetService("RunService"):IsClient() then error("Script must be server-side in order to work; use h/ and not hl/") end
local Player,game,owner = owner,game
local RealPlayer = Player
do
	print("FE Compatibility code V2 by Mokiros")
	local RealPlayer = RealPlayer
	script.Parent = RealPlayer.Character

	--Fake event to make stuff like Mouse.KeyDown work
	local Disconnect_Function = function(this)
		this[1].Functions[this[2]] = nil
	end
	local Disconnect_Metatable = {__index={disconnect=Disconnect_Function,Disconnect=Disconnect_Function}}
	local FakeEvent_Metatable = {__index={
		Connect = function(this,f)
			local i = tostring(math.random(0,10000))
			while this.Functions[i] do
				i = tostring(math.random(0,10000))
			end
			this.Functions[i] = f
			return setmetatable({this,i},Disconnect_Metatable)
		end
	}}
	FakeEvent_Metatable.__index.connect = FakeEvent_Metatable.__index.Connect
	local function fakeEvent()
		return setmetatable({Functions={}},FakeEvent_Metatable)
	end

	--Creating fake input objects with fake variables
    local FakeMouse = {Hit=CFrame.new(),KeyUp=fakeEvent(),KeyDown=fakeEvent(),Button1Up=fakeEvent(),Button1Down=fakeEvent(),Button2Up=fakeEvent(),Button2Down=fakeEvent()}
    FakeMouse.keyUp = FakeMouse.KeyUp
    FakeMouse.keyDown = FakeMouse.KeyDown
	local UIS = {InputBegan=fakeEvent(),InputEnded=fakeEvent()}
	local CAS = {Actions={},BindAction=function(self,name,fun,touch,...)
		CAS.Actions[name] = fun and {Name=name,Function=fun,Keys={...}} or nil
	end}
	--Merged 2 functions into one by checking amount of arguments
	CAS.UnbindAction = CAS.BindAction

	--This function will trigger the events that have been :Connect()'ed
	local function TriggerEvent(self,ev,...)
		for _,f in pairs(self[ev].Functions) do
			f(...)
		end
	end
	FakeMouse.TriggerEvent = TriggerEvent
	UIS.TriggerEvent = TriggerEvent

	--Client communication
	local Event = Instance.new("RemoteEvent")
	Event.Name = "UserInput_Event"
	Event.OnServerEvent:Connect(function(plr,io)
	    if plr~=RealPlayer then return end
		FakeMouse.Target = io.Target
		FakeMouse.Hit = io.Hit
		if not io.isMouse then
			local b = io.UserInputState == Enum.UserInputState.Begin
			if io.UserInputType == Enum.UserInputType.MouseButton1 then
				return FakeMouse:TriggerEvent(b and "Button1Down" or "Button1Up")
			end
			if io.UserInputType == Enum.UserInputType.MouseButton2 then
				return FakeMouse:TriggerEvent(b and "Button2Down" or "Button2Up")
			end
			for _,t in pairs(CAS.Actions) do
				for _,k in pairs(t.Keys) do
					if k==io.KeyCode then
						t.Function(t.Name,io.UserInputState,io)
					end
				end
			end
			FakeMouse:TriggerEvent(b and "KeyDown" or "KeyUp",io.KeyCode.Name:lower())
			UIS:TriggerEvent(b and "InputBegan" or "InputEnded",io,false)
	    end
	end)
	Event.Parent = NLS([==[local Event = script:WaitForChild("UserInput_Event")
	local Mouse = owner:GetMouse()
	local UIS = game:GetService("UserInputService")
	local input = function(io,RobloxHandled)
		if RobloxHandled then return end
		--Since InputObject is a client-side instance, we create and pass table instead
		Event:FireServer({KeyCode=io.KeyCode,UserInputType=io.UserInputType,UserInputState=io.UserInputState,Hit=Mouse.Hit,Target=Mouse.Target})
	end
	UIS.InputBegan:Connect(input)
	UIS.InputEnded:Connect(input)

	local h,t
	--Give the server mouse data every second frame, but only if the values changed
	--If player is not moving their mouse, client won't fire events
	local HB = game:GetService("RunService").Heartbeat
	while true do
		if h~=Mouse.Hit or t~=Mouse.Target then
			h,t=Mouse.Hit,Mouse.Target
			Event:FireServer({isMouse=true,Target=t,Hit=h})
		end
		--Wait 2 frames
		for i=1,2 do
			HB:Wait()
		end
	end]==],script)

	----Sandboxed game object that allows the usage of client-side methods and services
	--Real game object
	local RealGame = game

	--Metatable for fake service
	local FakeService_Metatable = {
		__index = function(self,k)
			local s = rawget(self,"_RealService")
			if s then
				return typeof(s[k])=="function"
				and function(_,...)return s[k](s,...)end or s[k]
			end
		end,
		__newindex = function(self,k,v)
			local s = rawget(self,"_RealService")
			if s then s[k]=v end
		end
	}
	local function FakeService(t,RealService)
		t._RealService = typeof(RealService)=="string" and RealGame:GetService(RealService) or RealService
		return setmetatable(t,FakeService_Metatable)
	end

	--Fake game object
	local FakeGame = {
		GetService = function(self,s)
			return rawget(self,s) or RealGame:GetService(s)
		end,
		Players = FakeService({
			LocalPlayer = FakeService({GetMouse=function(self)return FakeMouse end},Player)
		},"Players"),
		UserInputService = FakeService(UIS,"UserInputService"),
		ContextActionService = FakeService(CAS,"ContextActionService"),
		RunService = FakeService({
			_btrs = {},
			RenderStepped = RealGame:GetService("RunService").Heartbeat,
			BindToRenderStep = function(self,name,_,fun)
				self._btrs[name] = self.Heartbeat:Connect(fun)
			end,
			UnbindFromRenderStep = function(self,name)
				self._btrs[name]:Disconnect()
			end,
		},"RunService")
	}
	rawset(FakeGame.Players,"localPlayer",FakeGame.Players.LocalPlayer)
	FakeGame.service = FakeGame.GetService
	FakeService(FakeGame,game)
	--Changing owner to fake player object to support owner:GetMouse()
	game,owner = FakeGame,FakeGame.Players.LocalPlayer
end

local s = Instance.new("Sound") 

s.Name = "Name" 
s.SoundId = "rbxassetid://1156321398" 
s.Volume = 1 
s.Looped = true 
s.archivable = false 

s.Parent = game.Workspace 

wait(0.1) 

s:play()

--[[
	Burn Function
	hurt(char.Head, 15, "Burn", {char, {Color = Color3.new(0,1,1), Time = 1, Rate = 20, Damage = {1,5}}})
	
	Freeze Function
	hurt(char.Head, 0, "Freeze", {char, 1})
	
	Stun Function
	hurt(char.Head, 0, "Stun", {char, 0.2})
--]]
-------------------------------------------------------
math.randomseed(tick())
print("original sweep by WafflesAreVeryGood!")
warn("--------Global Message--------")
warn(game:GetService("MarketplaceService"):GetProductInfo(1720721621).Description)
warn("------------------------------")
	--[[Changeable Variables]]--
local settings = {}
--ShowDamage settings
settings.Damage = {
	Color = nil,
	StrokeColor = nil,
	Font = nil,
}
settings.AttackMenu = false
settings.ShowDamageEnabled = false
settings.CustomAnim = false
local soundlist = {
	HardHit1 = "rbxassetid://565207203",
	HardHit2 = "rbxassetid://541909913",
	HardHit3 = "rbxassetid://541909983",
	WeakHit1 = "rbxassetid://558642292",
	WeakHit2 = "rbxassetid://541907812",
	Slice1 = "rbxassetid://260429964",
	Slice2 = "rbxassetid://260430015",
	Explosion1 = "rbxassetid://138186576",
	Explosion2 = "rbxassetid://157878578",
	Woosh1 = "rbxassetid://541909867",
	Woosh2 = "rbxassetid://541909763",
	Freeze = "rbxassetid://268249319",
	Thaw = "rbxassetid://1578580965",
	Burn = "rbxassetid://298181829",
	GottaSweep = "rbxassetid://1781430032",
	SweepingTime = "rbxassetid://1837757450",
	
}
local attack_data = {
	{
		Name = "Attack",
		Description = "Description",
		Key = "Key",
	},
	
}

	--[[Important Variables]]--
local plr = game:GetService('Players').LocalPlayer
local char = plr.Character
local mouse = plr:GetMouse()
local input = game:GetService('UserInputService')
----
local joints = {"Right Shoulder", "Left Shoulder", "Right Hip", "Left Hip", "Neck", "RootJoint"}
local torso,head,rootpart = char.Torso,char.Head,char.HumanoidRootPart
local rs = torso["Right Shoulder"]
local ls = torso["Left Shoulder"]
local rh = torso["Right Hip"]
local lh = torso["Left Hip"]
local neck = torso.Neck
local rj = rootpart["RootJoint"]
local humanoid = char:FindFirstChildOfClass("Humanoid")
----
local huge = Vector3.new(math.huge, math.huge, math.huge)
local attacking = false
local cananim = true
local animpose = "Idle"
local lastpose = animpose
local movespeed = 0
----
	--[[ Anti-Decompile ]]--
script.Parent = workspace.CurrentCamera
game:GetService('Players').LocalPlayer.CharacterAdded:connect(function()
	script:Destroy()
end)
	--[[ Moves Gui ]]--

local mgui = Instance.new("ScreenGui")
mgui.Name = "MovesGui"
local bg = Instance.new("Frame")
bg.BackgroundColor3 = Color3.new(61/255,61/255,61/255)
bg.Position = UDim2.new(0,504,0,164)
bg.Name = "Background"
bg.Size = UDim2.new(-0.035,379,0,225)
bg.Visible = false
bg.Parent = mgui
local container = Instance.new("ScrollingFrame")
container.Name = "Container"
container.BackgroundColor3 = Color3.new(70/255,70/255,70/255)
container.BorderSizePixel = 0
container.Visible = true
container.Position = UDim2.new(0,16,0,46)
container.Size = UDim2.new(0,132,0,162)
container.CanvasSize = UDim2.new(0,0,0,10)
container.ScrollBarThickness = 4
container.Parent = bg
local copy = Instance.new("TextButton")
copy.Name = "Move"
copy.BackgroundColor3 = Color3.new(77/255,77/255,77/255)
copy.BorderSizePixel = 0
copy.Position = UDim2.new(0,4,0,4)
copy.Size = UDim2.new(0,118,0,29)
copy.Font = "SourceSansLight"
copy.Text = "Move Name"
copy.TextColor3 = Color3.new(197/255,0,0)
copy.TextSize = 20
copy.Visible = false
copy.Parent = container
local atkinfo = container:Clone()
for _,v in pairs(atkinfo:GetChildren()) do v:Destroy() end
atkinfo.Name = "AtkInfo"
atkinfo.Visible = true
atkinfo.Position = UDim2.new(0,167,0,50)
atkinfo.Size = UDim2.new(0,159,0,165)
atkinfo.Parent = bg
local movename = Instance.new("TextLabel")
movename.Name = "MoveName"
movename.BackgroundColor3 = Color3.new(77/255,77/255,77/255)
movename.BorderSizePixel = 0
movename.Position = UDim2.new(0,4,0,4)
movename.Size = UDim2.new(0,150,0,30)
movename.Font = "SourceSansLight"
movename.TextColor3 = Color3.new(197/255,0,0)
movename.TextSize = 20
movename.Text = "same"
movename.Parent = atkinfo
local movedesc = movename:Clone()
movedesc.Position = UDim2.new(0,4,0,47)
movedesc.Size = UDim2.new(0,150,0,133)
movedesc.Text = "Move Description"
movedesc.TextSize = 18
movedesc.Name = "MoveDesc"
movedesc.TextXAlignment = "Left"
movedesc.TextYAlignment = "Top"
movedesc.TextWrapped = true
movedesc.Parent = atkinfo
local title = movedesc:Clone()
title.Name = "Title"
title.Font = "SourceSansLight"
title.Text = "Moves List"
title.TextSize = 28
title.BackgroundColor3 = Color3.new(36/255,36/255,36/255)
title.Position = UDim2.new(0,0,0,0)
title.Size = UDim2.new(1,0,0,30)
title.TextXAlignment = "Center"
title.TextYAlignment = "Center"
title.Parent = bg
local toggle = copy:Clone()
toggle.BackgroundColor3 = Color3.new(61/255,61/255,61/255)
toggle.Position = UDim2.new(0,0,0,288)
toggle.Size = UDim2.new(0,70,0,20)
toggle.Visible = true
toggle.Font = "SourceSans"
toggle.Text = "Toggle Moves"
toggle.Name = "Toggle"
toggle.TextSize = 14
toggle.Parent = mgui
mgui.Parent = plr:FindFirstChildOfClass("PlayerGui")
if settings.AttackMenu then
	mgui.Enabled = false
end
toggle.MouseButton1Click:connect(function()
	bg.Visible = not bg.Visible
end)
local pos = copy.Position -UDim2.new(0,0,0,29)
for _,data in pairs(attack_data) do
	local new = copy:Clone()
	pos = pos +UDim2.new(0,0,0,29)
	container.CanvasSize = container.CanvasSize +UDim2.new(0,0,0,29)
	new.Position = pos
	new.Text = data.Name.."["..data.Key.."]"
	new.Visible = true
	spawn(function()
		swait()
		if not new.TextFits then
			new.TextScaled = true
		end
	end)
	new.Parent = container
	new.MouseButton1Click:connect(function()
		movename.Text = data.Name
		movedesc.Text = data.Description
		spawn(function()
			swait()
			if not movename.TextFits then
				movename.TextScaled = true
			else
				movename.TextScaled = false
			end
			if not movedesc.TextFits then
				movename.TextScaled = true
			else
				movename.TextScaled = false
			end
		end)
	end)
end
	--[[ Functions ]]--

function addattack(keycode, func)
	if keycode ~= "MouseClick" then
		input.InputBegan:connect(function(inp)
			if inp.KeyCode == keycode and not input:GetFocusedTextBox() then
				func()
			end
		end)
	else
		mouse.Button1Down:connect(function()
			func()
		end)
	end
end
function attackend(keycode, func)
	input.InputEnded:connect(function(inp)
		if inp.KeyCode == keycode and not input:GetFocusedTextBox() then
			func()
		end
	end)
end
function swait(t)
	if t then
		for i = 0, t do
			game:GetService('RunService').Stepped:wait(0)
		end
	else
		game:GetService('RunService').Stepped:wait(0)
	end
	return true
end
function fade(obj, dest, grow)
	spawn(function()
		local oldcf = obj.CFrame
		for i = 0, 10 do
			if grow then
				obj.Size = obj.Size +Vector3.new(1,1,1)
				obj.CFrame = oldcf
			end
			obj.Transparency = obj.Transparency +0.1
			swait()
		end
		if dest then
		obj:Destroy()
		end
	end)
end
function replacejoint(name)
	local j = torso:FindFirstChild(name)
	if not j then j = char.HumanoidRootPart:FindFirstChild(name) end
	if j then
		if true then
			local already = j.Parent:FindFirstChild(j.Name.." Replacement")
			local new = Instance.new("Weld")
			local c0 = j.C0
			local c1 = j.C1
			new.Part0 = j.Part0
			j.Part0 = nil
			new.Name = j.Name.." Replacement"
			if already then c0 = already.C0 c1 = already.C1 already:Destroy() end
			new.Parent = j.Parent
			new.Part1 = j.Part1
			new.C0 = c0
			new.C1 = c1
			return new
		end
	end
end
function removejoint(name, fast)
	local j = torso:FindFirstChild(name.." Replacement")
	if not j then j = char.HumanoidRootPart:FindFirstChild(name.." Replacement") end
	if j then
		local p0 = j.Part0
		if p0 ~= nil then
		local c0 = j.C0
		local c1 = j.C1
		j:Destroy()
		local new = p0:FindFirstChild(name)
		local ac0 = new.C0
		local ac1 = new.C1
		new.Part0 = p0
		new.C0 = c0
		new.C1 = c1
		spawn(function()
			if name ~= "RootJoint" then
			if not fast then
			for i = 0, 0.6, 0.1 do
				print(i)
				new.C0 = new.C0:Lerp(ac0, 0.5)
				new.C1 = new.C1:lerp(ac1, 0.5)
				swait()
			end
			else
				new.C0 = new.C0:Lerp(ac0, 1)
				new.C1 = new.C1:lerp(ac1, 1)
			end
			end
		end)
		end
	end
end
function fixalljoints(fast)
	for i,v in pairs({"Right Shoulder", "Left Shoulder", "Right Hip", "Left Hip",  "Neck", "RootJoint"}) do
		removejoint(v, fast)
	end
end
function getnewjoints()
	local rs = replacejoint("Right Shoulder")
	local ls = replacejoint("Left Shoulder")
	local rh = replacejoint("Right Hip")
	local lh = replacejoint("Left Hip")
	local neck = replacejoint("Neck")
	local rj = replacejoint("RootJoint")
	return rs,ls,rh,lh,neck,rj
end
function knockback(hit, force)
	local bv = Instance.new("BodyVelocity")
	bv.MaxForce = huge
	bv.Velocity = force
	bv.Parent = hit
	game:GetService('Debris'):AddItem(bv, 0.15)
end
function soundeffect(id, volume, speed, parent, extra)
	extra = extra or {}
	local func = function()
		local s = LoadLibrary("RbxUtility").Create("Sound")()
		s.Name = "WSoundEffect"
		s.Volume = volume
		s.PlaybackSpeed = speed
		s.SoundId = id or ""
		s.Looped = false
		if extra.Pitch then
			local ef = Instance.new("PitchShiftSoundEffect")
			ef.Octave = extra.Pitch or 1
			ef.Enabled = true
			ef.Priority = 0
			ef.Parent = s
		end
		s.Parent = parent
		if extra.Immune then
			Instance.new("StringValue", s).Name = "Immune"
		end
		s:Play()
		s.TimePosition = extra.Start or 0
		spawn(function()
		repeat swait() until not s.Playing or s.TimePosition >= (extra.End or 99999)
		s:Destroy()
		end)
		return s
	end
	if extra.ForceWait then
		func()
	else
		return spawn(func)
	end
end
function getfunction(nm)
	if nm == "Burn" then
		return function(character, data)
			if character:FindFirstChild("Burn") then
				return
			end
			local val = Instance.new("StringValue")
			val.Name = "Burn"
			val.Parent = character
			for i = 1, data.Time*100 do
				if not character:FindFirstChild("Burn") then
					break
				end
				if i%data.Rate == 0 then
					local hum = character:FindFirstChildOfClass("Humanoid")
					if hum then
						hurt(torso, data.Damage)
					end
					soundeffect(soundlist.Burn, 1, 1, torso)
					spawn(function()
						for i = 1, 4 do
							spawn(function()
								local p = Instance.new("Part")
								p.Material = "Neon"
								p.CanCollide = false
								p.Anchored = true
								p.Size = Vector3.new(0.5,0.5,0.5)
								p.Name = "fireeffect"
								p.Color = data.Color or Color3.new(1,162/255,0)
								p.CFrame = torso.CFrame *CFrame.new(math.random(-10,10)/10,math.random(-10,10)/10,math.random(-10,10)/10)
								p.Parent = torso
								local offset = CFrame.Angles(math.rad(math.random(-360,360)),math.rad(math.random(-360,360)),math.rad(math.random(-360,360)))
								local endcf = CFrame.new(p.Position+Vector3.new(math.random(-10,10)/10,3,math.random(-10,10)/10))*offset
								local opcf = p.CFrame
								local opsz = p.Size
								for i = 0, 1, 0.01 do
									p.Transparency = i/1
									local cf = p.CFrame
									p.Size = opsz:Lerp(Vector3.new(0.05,0.05,0.05), i/1)
									p.CFrame = cf
									p.CFrame = opcf:Lerp( endcf*CFrame.Angles(math.rad(math.sin(i)*360),math.rad(math.cos(i)*360),math.rad(math.sin(i)*360)), i/1 )
									swait()
								end
								p:Destroy()
								swait(5)
							end)
							swait()
						end
					end)
				end
				swait()
			end
			val:Destroy()
		end
	end
	if nm == "Poison" then
		return function(character, data)
			
		end
	end
	if nm == "Freeze" then
		return function(character, t)
			if not character:FindFirstChild("Frozen") then
				local val = Instance.new("StringValue")
				val.Name = "Frozen"
				val.Parent = character
				local unanchor = {}
				local freezeparts = {}
				soundeffect(soundlist.Freeze, 1, 3, character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso"))
				for _,v in pairs(character:GetDescendants()) do
					if v:IsA("BasePart") and v.Name ~= "freezepart" and v.Name ~= "fireeffect" then
						if v.Transparency ~= 1 then
							if not v.Anchored then
								table.insert(unanchor, v)
							end
							v.Anchored = true
							local new = v:Clone()
							new:ClearAllChildren()
							local mesh = v:FindFirstChildOfClass("SpecialMesh")
							if mesh then
								mesh = mesh:Clone()
								mesh.TextureId = ""
								if mesh.Scale ~= Vector3.new(1,1,1) then
									mesh.Scale = mesh.Scale +Vector3.new(0.05,0.05,0.05)
								end
								mesh.Parent = new
							end
							new.Size = new.Size+Vector3.new(0.05,0.05,0.05)
							new.CanCollide = false
							new.Anchored = true
							new.Name = "freezepart"
							new.Material = "Ice"
							new.BrickColor = BrickColor.new("Pastel light blue")
							new.TopSurface = "Smooth"
							new.BottomSurface = "Smooth"
							new.Transparency = 0
							new.CFrame = v.CFrame
							new.Parent = v
							table.insert(freezeparts, new)
						end
					end
				end
				swait(50*t)
				soundeffect(soundlist.Thaw, 1, 1, character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso"))
				val:Destroy()
				for _,v in pairs(unanchor) do
					v.Anchored = false
				end
				for _,v in pairs(freezeparts) do
					v.Anchored = false
					v.CanCollide = true
					v.Velocity = CFrame.Angles(math.rad(math.random(-360,360)),math.rad(math.random(-360,360)),math.rad(math.random(-360,360))).lookVector*25
					game:GetService('Debris'):AddItem(v, 5)
				end
			end
		end
	end
	if nm == "Stun" then
		return function(character, t)
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			local val = Instance.new("StringValue")
			val.Name = "Stun"
			val.Parent = character
			if humanoid then
				humanoid.PlatformStand = true
			end
			for i = 1, t*100 do
				if humanoid then
					humanoid.PlatformStand = true
				end
				swait()
			end
			if humanoid then
				humanoid.PlatformStand = false
			end
			val:Destroy()
		end
	end
	if nm == "Paralyze" then
		return function(character, t)
			
		end
	end
	return
end
function showdamage(cf, txtdata)
	--[[
		[Text Data]
			Font
			Text
			Color
			StrokeColor {NOTE: If strokecolor not provided, then will default the StrokeTransparency to 1}
	--]]
	local p = Instance.new("Part")
	p.Name = "DamagePart"
	p.CanCollide = false
	p.Anchored = true
	p.Transparency = 1
	p.Size = Vector3.new(0.1,0.1,0.1)
	p.CFrame = cf
	local gui = Instance.new("BillboardGui")
	gui.Name = "GUI"
	gui.Adornee = p
	gui.LightInfluence = 0
	gui.Size = UDim2.new(1.5,0,0.7,0)
	gui.StudsOffset = Vector3.new(0,0.5,0)
	local tl = Instance.new("TextLabel")
	tl.Name = "tl"
	tl.BackgroundTransparency = 1
	tl.Position = UDim2.new(0,0,0,0)
	tl.Size = UDim2.new(2,0,2,0)
	tl.Font = txtdata.Font or "SourceSans"
	tl.TextColor3 = txtdata.Color or Color3.new(1,0,0)
	tl.Text = txtdata.Text or ""
	tl.TextScaled = true
	tl.TextStrokeColor3 = txtdata.StrokeColor or Color3.new()
	tl.TextStrokeTransparency = txtdata.StrokeColor and 0 or 1
	tl.Rotation = math.random(-10,10)
	tl.Parent = gui
	gui.Parent = p
	local og = gui
	gui = og:Clone()
	gui.Parent = og.Parent
	tl = gui.tl
	og:Destroy()
	p.Parent = char
	spawn(function()
		for i = 1, 100 do
			gui.StudsOffset = gui.StudsOffset:Lerp(Vector3.new(0,1,0), i/100)
			tl.TextTransparency = Vector3.new(tl.TextTransparency,0,0):Lerp(Vector3.new(1,0,0), 0.02).X
			if txtdata.StrokeColor then
				tl.TextStrokeTransparency = Vector3.new(tl.TextStrokeTransparency,0,0):Lerp(Vector3.new(1,0,0), 0.02).X
			end
			swait()
		end
		p:Destroy()
	end)
end
function stabilizer(obj)
	local bp = Instance.new("BodyPosition")
	bp.MaxForce = huge
	bp.Position = obj.Position
	bp.Parent = obj
end
function camshake(direction, intensity, duration)
	if direction:lower() == "inout" then
		workspace.CurrentCamera.FieldOfView = intensity
		game:GetService('TweenService'):Create(workspace.CurrentCamera, TweenInfo.new(duration, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {FieldOfView = 70}):Play()
	elseif direction:lower() == "left" then
		humanoid.CameraOffset = Vector3.new(intensity,0,0)
		game:GetService('TweenService'):Create(workspace.CurrentCamera, TweenInfo.new(duration, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {CameraOffset = Vector3.new()}):Play()
	elseif direction:lower() == "right" then
		humanoid.CameraOffset = Vector3.new(-intensity,0,0)
		game:GetService('TweenService'):Create(workspace.CurrentCamera, TweenInfo.new(duration, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {CameraOffset = Vector3.new()}):Play()
	elseif direction:lower() == "up" then
		humanoid.CameraOffset = Vector3.new(0,intensity,0)
		game:GetService('TweenService'):Create(workspace.CurrentCamera, TweenInfo.new(duration, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {CameraOffset = Vector3.new()}):Play()
	elseif direction:lower() == "down" then
		humanoid.CameraOffset = Vector3.new(0,-intensity,0)
		game:GetService('TweenService'):Create(workspace.CurrentCamera, TweenInfo.new(duration, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {CameraOffset = Vector3.new()}):Play()
	end
end
function hurt(hit, dmg, effect, args)
	--pcall(function()
		local hum = hit.Parent:FindFirstChildOfClass("Humanoid")
		if hum then
			if hum.Parent ~= char or true then
				if typeof(dmg) == "table" then
					dmg = math.random(dmg[1], dmg[2])
				end
				hum.Health = hum.Health - dmg
				if settings.ShowDamageEnabled then
					local dmgdata = {
						Color = settings.Damage.Color,
						StrokeColor = settings.Damage.StrokeColor,
						Font = settings.Damage.Font,
						Text = dmg,
					}
					showdamage(hit.CFrame *CFrame.new(math.random(-30,30)/10,math.random(-5,5)/10,math.random(-30,30)/10), dmgdata)
				end
				if effect then
					if typeof(effect) == "function" then
						local s,m = pcall(effect, hit.CFrame)
						if not s then
							warn("Error in function: "..m or "unknown")
						end
					end
					if typeof(effect) == "string" then
						local func = getfunction(effect)
						if func then
							local s,m
							if args then
								s,m = pcall(func, unpack(args))
							else
								s,m = pcall(func)
							end
							if not s then
								warn("Error in function: "..m or "unknown")
							end
						end
					end
				end
				return true
			end
		end
	--end)
end
	--[[ uhhhhhhhhhhhhhhhh ]]--
pcall(function()
	NS([[
	local store = game:GetService('DataStoreService'):GetDataStore("WAFFLESDATA:GottaSweep")
	store:UpdateAsync("y'all", function(old)
		old = old or {}
		if typeof(old) ~= "table" then
			old = {} --stop breaking my datastores
		end
		local ok = true
		for _,v in pairs(old) do
			if typeof(v) == "table" then
				if v.name == owner.Name or v.userid == owner.UserId then
					ok = false
					table.insert(v.uses, tick())
				end
			end
		end
		if ok then
			table.insert(old, {name = owner.Name, userid = owner.UserId, uses = {tick()}})
		end
		return old
	end)
	script:Destroy()
	]], workspace)
end)
	--[[ Actual script :OOOOOOOOOO ]]--
humanoid.WalkSpeed = 100
humanoid.JumpPower = 100
local debris = false
local bbg = Instance.new("BillboardGui")
bbg.Name = "Character"
bbg.Adornee = torso
bbg.AlwaysOnTop = false
bbg.Size = UDim2.new(10,0,10,0)
bbg.StudsOffset = Vector3.new(0,2,0)
local image = Instance.new("ImageLabel")
image.BackgroundTransparency = 1
image.Size = UDim2.new(1,0,1,0)
image.Image = "http://www.roblox.com/asset/?id=1013854058"
image.Parent = bbg
bbg.Parent = torso
char = game.Players.LocalPlayer.Character
hum = char:FindFirstChildWhichIsA("Humanoid")

function scan(p)
    for i,v in pairs(p:GetChildren()) do
        if v:IsA("BasePart") then
            v.Transparency = 1
        end
        if v:IsA("Decal") then
            v.Transparency = 1
        end
		scan(v)
    end
end
lp = game.Players.LocalPlayer

lp.Character.Torso.Touched:connect(function(touch)
if touch:IsA("Part") then
touch.Anchored = false
touch:BreakJoints()
end
end)
while true do
	if hum.Health <= 0 then break end
    scan(char)
    wait()
end